// Задание 1
// Написать функцию, которая принимает два параметра и складывает их.
// Предусмотреть проверку на тип данных. Если хоть один из параметров не является числом, должно выводиться ообщение об ошибке.
// Также обраьботайте случай, если не было введено два параметра.
// Примеры результатов вызова функции:
// sum(2,4); // 6
// sum('d',4); // введенные данные не являются числами
// sum(1, [2]); // введенные данные не являются числами
// sum(1); // введите два параметра
// sum(); // введите два параметра



let sunNumber = function (a, b) {
   if (a === undefined || b === undefined) {
      console.log('введите два параметра');
   } else if (a / 1 !== a || b / 1 !== b) {
      console.log('введенные данные не являются числами');
   } else { console.log(a + b); };


}
sunNumber(1, 3)




// Задание 2

// Измените функцию "square" так, чтобы в случае ее вызова без аргумента генерировалась консольная ошибка
// "Функция "square" не может быть вызвана без аргумента"



function square(a) {
   a === undefined ? alert('Функция "square" не может быть вызвана без аргумента') : console.log(a * a)

}

square()



// Задание 3

// Создать функцию "угадай число". Она принимает число от 1 до 10 (обязательно проверить, что число не больше 10 и не меньше 0). Генерирует рандомное число от 1 до 10 и сравнивает с заданным числом.

// Если они совпали, то возвращает “Вы выиграли”, если нет - то “Вы не угадали, ваше число -  ...,  а выпало число ...”

// Функция создания случайного числа уже была ранее в материалах, в задаче по созданию случайного цвета.

// Написать функцию в стрелочном синтаксисе.


let getRandomInteger = Math.floor(Math.random() * (10 - 0)) + 0;

let guessNumber = (num) => {
   if (num >= 0 && num <= 10 && num === getRandomInteger) {
      console.log('Вы выиграли !');
   } else if (num <= 10 && num >= 0 && num !== getRandomInteger) {
      console.log(`Вы не угадали , ваше число - ${num}, а выпало число - ${getRandomInteger}`);
   } else {
      console.log('Не верный');
   };

}

guessNumber(5);




// Задание 4

// Определить массив, например let arr = [5, 4, 3, 8, 0];
// Создать функцию filterFor(arr, a). Функция должна вернуть новый массив из элементов arr, но в нем должны содержаться элементы, которые больше или равны (>=) значения переменной a.
// Например, запуск функции filterFor(arr, 5) дает результат [5,8]
// запуск функции filterFor(arr, 10) дает результат []
// запуск функции filterFor(arr, 3.11) дает результат [4,5,8]


let arr = [5, 4, 3, 8, 0];
let filterFor = (arr, a) => {
   let filterArray = [];
   for (let item of arr) {
      if (item >= a) {
         filterArray.push(item)
      }
   }
   return filterArray
}

console.log(filterFor(arr, 3.11));




// Задание 5
// Напишите функцию copyArr(arr), которая копирует массив, не изменяя оригинал.
//  Используйте подходящий метод массива.


let numArray = [1, 3, 4, 7]
numArray.map(number => number);




// Задание 6

// Создайте функцию sumObjectValues, которая будет суммировать все значения свойств, которые являются числами. Сумму чисел необходимо вернуть из функции.

// Проверить работу функции можно на объекте:

const objectWithNumbers = {
   a: 10,
   b: 20,
   c: 'string',
   d: 12,
}



const sumObjectValues = (obj) => {
   let result = 0;
   for (let key in obj) {
      if (typeof obj[key] === 'number') {
         result += obj[key]
      }
   }
   return result
}

console.log(sumObjectValues(objectWithNumbers));